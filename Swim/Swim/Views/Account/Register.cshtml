@model Swim.Models.RegisterDataModel
@{
    ViewBag.Title = "加入會員";
}

<h1>申請帳號</h1>
@using (Ajax.BeginForm("Register", "Account", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "ajaxResult(data);",
    OnFailure = "ajaxResult(data);"
},
    new { id = "registerForm" }))
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="col-md-8">
            <!--我要當 教練/學生-->
            <div class="form-group">
                @Html.Label("我要當", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <label>
                        @Html.RadioButtonFor(m => m.Role, "Coach")
                        教練
                    </label>
                    <label>
                        @Html.RadioButtonFor(m => m.Role, "Student")
                        學生
                    </label>
                    @Html.ValidationMessageFor(m => m.Role)
                </div>
            </div>
            <!--帳號-->
            <div class="form-group">
                @Html.LabelFor(m => m.UserId, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.UserId, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.UserId)
                </div>
            </div>
            <!--密碼-->
            <div class="form-group">
                @Html.LabelFor(m => m.LoginPassword, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.LoginPassword, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LoginPassword)
                </div>
            </div>
            <!--再次輸入密碼-->
            <div class="form-group">
                @Html.LabelFor(m => m.LoginPasswordConfirmation, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.PasswordFor(m => m.LoginPasswordConfirmation, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.LoginPasswordConfirmation)
                </div>
            </div>
            <!--性別-->
            <div class="form-group">
                @Html.LabelFor(m => m.Sex, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <label>
                        @Html.RadioButtonFor(m => m.Sex, "M")
                        男生
                    </label>
                    <label>
                        @Html.RadioButtonFor(m => m.Sex, "F")
                        女生
                    </label>
                    @Html.ValidationMessageFor(m => m.Sex)
                </div>
            </div>
            <!--生日-->
            <div class="form-group">
                @Html.Label("出生年月日", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    <div style="padding:4px">
                        <span>西元</span>
                        @Html.DropDownListFor(m => m.Birthday_Year, (SelectList)ViewBag.yearList, "請選擇", new { onchange = "ChangeDayDropdownList();" })
                        <span>年 </span>
                        @Html.DropDownListFor(m => m.Birthday_Month, (SelectList)ViewBag.monthList, "請選擇", new { onchange = "ChangeDayDropdownList();" })
                        <span>月 </span>
                        @Html.DropDownListFor(m => m.Birthday_Day, (SelectList)ViewBag.dayList, "請選擇")
                        <span>日</span>
                        @Html.ValidationMessageFor(m => m.Birthday_Year)
                        @Html.ValidationMessageFor(m => m.Birthday_Month)
                        @Html.ValidationMessageFor(m => m.Birthday_Day)
                    </div>
                </div>
            </div>
            <!--電子信箱-->
            <div class="form-group">
                @Html.LabelFor(m => m.EmailAddress, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.EmailAddress, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.EmailAddress)
                </div>
            </div>
            <!--地址-->
            <div class="form-group">
                @Html.Label("居住地", new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.DropDownListFor(m => m.Address_County, (SelectList)ViewBag.countyList, "請選擇", new { onchange = "ChangeTownshipDropdownList($(this).val());" })
                    @Html.DropDownListFor(m => m.Address_Township, (SelectList)ViewBag.townshipList, "請選擇", new { })
                    @Html.TextBoxFor(m => m.Address_Detail, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Address_County)
                    @Html.ValidationMessageFor(m => m.Address_Township)
                </div>
            </div>
            <!--手機-->
            <div class="form-group">
                @Html.LabelFor(m => m.MobilePhone, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(m => m.MobilePhone, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.MobilePhone)
                </div>
            </div>
            <!--備註-->
            <div class="form-group">
                @Html.LabelFor(m => m.Memo, new { @class = "col-md-2 control-label" })
                <div class="col-md-10">
                    @Html.TextAreaFor(m => m.Memo, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Memo)
                </div>
            </div>
        </div>
    </div>
}
<div>
    <div style="display:inline-block; border: 1px solid black;height:120px;overflow:auto">
        <span>個資收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
        <br />
        <span>一、資收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
        <br />
        <span>二、收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
        <br />
        <span>三、收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
        <br />
        <span>四、收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
        <br />
        <span>四、收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
        <br />
        <span>四、收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
        <br />
        <span>四、收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
        <br />
        <span>四、收集條款個資收集條款個資收集條款個資收集條款個資收集條款</span>
    </div>
    <div>
        <input type="checkbox" id="agreement" onchange="changeSubmitButton($(this).is(':checked'));" />
        <span>我已閱讀並同意上述條款</span>
    </div>
</div>
<div>
    <div>
        <input id="submitButton" type="button" onclick="$('#registerForm').submit()" value="確認送出" disabled />
        <input type="button" value="重填" />
    </div>
</div>

@section scripts{
    <script type="text/javascript">

        $.validator.setDefaults({
            onkeyup: false
        });

        // 改變日期下拉選單的天數
        function ChangeDayDropdownList() {
            // 先清除日期選單除了default option外的所有選項
            $.each($('#Birthday_Day').find('option'), function (index, data) {
                if (index > 0)
                    $(data).remove();
            });

            var year = $('#Birthday_Year').val();
            var month = $('#Birthday_Month').val();

            // 年份及日期皆有選擇，才會進入準備取得日期選單的value
            if (year != '' && month != '') {
                var dayDropdownList = $('#Birthday_Day');


                // 發ajax向server端取得對應年月的日期天數
                $.ajax({
                    url: '@Url.Action("GetMaxDayByYearAndMonth", "Account")',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        year: year,
                        month: month
                    },
                    success: function (maxDay) {
                        if (maxDay > 0) {
                            // 取得最大天數後逐一製成選項放上選單中
                            for (var i = 1; i <= maxDay ; i++) {
                                var option = new Option(i.toString(), i.toString());
                                dayDropdownList.append(option);
                            }
                        }
                    },
                    erroe: function () {
                        alert("Network Error!");
                    }
                })
            }
        }

        // 勾選同意條款後將確認送出按鈕enable
        function changeSubmitButton(isChecked) {
            $('#submitButton').attr("disabled", isChecked ? null : "disabled");
        }

        // 縣市下拉選單選取後發ajax取得對應的區選單
        function ChangeTownshipDropdownList(countyId) {
            if (countyId > 0) {
                $.each($('#Address_Township').find('option'), function (index, data) {
                    if (index > 0)
                        $(data).remove();
                });
                $.ajax({
                    url: '@Url.Action("GetTownshipList", "Account")',
                    type: 'POST',
                    dataType: 'json',
                    data: {
                        countyId: countyId
                    },
                    success: function (townshipList) {
                        var townshipDropdownList = $('#Address_Township');

                        $.each(townshipList, function (index, data) {
                            var option = new Option(data.CodeName, data.Code);
                            townshipDropdownList.append(option);
                        })
                    },
                    erroe: function () {
                        alert("Network Error!");
                    }
                })
            }
        }

        function ajaxResult(data) {
            if (data == 'SUCCESS') {
                alert("帳號建立成功！請回到首頁進行登入");
                document.location.replace('@Url.Action("Index", "Home")');
            }
            else {
                alert(data);
            }
        }
    </script>
}